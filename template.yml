AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    sam-alb

    Sample SAM app to integrate an ALB with a lambda

Parameters:
  LoadBalancerName:
    Type: String
    Default: geoffry
  ListenerProtocol:
    Type: String
    Default: HTTPS
  ListenerPort:
    Type: Number
    Default: 443
  PathPattern:
    Type: String
    Default: '/bar'

Resources:

    HelloWorldFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            FunctionName: !Sub '${AWS::StackName}-hwFunction'
            CodeUri: src/
            Handler: app.lambdaHandler
            Runtime: nodejs8.10

    MyCustomTargetGroup:
        DependsOn: HelloWorldFunction
        Type: Custom::CustomTG
        Properties:
            ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:customTargetGroup'
            Function: !Ref HelloWorldFunction 
            FunctionArn: !GetAtt HelloWorldFunction.Arn
            LoadBalancerName: !Ref LoadBalancerName
            ListenerProtocol: !Ref ListenerProtocol
            ListenerPort: !Ref ListenerPort
            PathPattern: !Ref PathPattern

    MyPermission:
        Type: AWS::Lambda::Permission
        Properties:
            Action: lambda:InvokeFunction
            FunctionName: !Ref HelloWorldFunction
            Principal: elasticloadbalancing.amazonaws.com
            SourceArn: !GetAtt MyCustomTargetGroup.TargetGroupArn

Outputs:
    TargetGroupArn: 
        Value: !GetAtt MyCustomTargetGroup.TargetGroupArn
